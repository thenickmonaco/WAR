searchState.loadedDescShard("raw_window_handle", 0, "Interoperability library for Rust Windowing applications.\nA raw window handle for Android NDK.\nRaw window handle for Android NDK.\nA raw window handle for AppKit.\nRaw window handle for AppKit.\nA raw window handle for Haiku.\nRaw window handle for Haiku.\nWindow that wraps around a raw window handle.\nA raw window handle for the Redox operating system.\nRaw window handle for the Redox operating system.\nAn enum to simply combine the different possible raw …\nA raw window handle for UIKit (Apple’s non-macOS …\nRaw window handle for UIKit.\nA raw window handle for Wayland.\nRaw window handle for Wayland.\nA raw window handle for the Web.\nRaw window handle for the Web.\nA raw window handle for Win32.\nRaw window handle for Win32.\nA raw window handle for WinRT.\nRaw window handle for WinRT.\nA raw window handle for Xcb.\nRaw window handle for Xcb.\nA raw window handle for Xlib.\nRaw window handle for Xlib.\nA pointer to an <code>ANativeWindow</code>.\nA pointer to a BDirectWindow object that might be null\nA pointer to a BWindow object\nA pointer to an X server <code>xcb_connection_t</code>.\nA WinRT <code>CoreWindow</code> handle.\nA pointer to an Xlib <code>Display</code>.\nA pointer to a <code>wl_display</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe <code>HINSTANCE</code> associated with this type’s <code>HWND</code>.\nA Win32 <code>HWND</code> handle.\nAn ID value inserted into the data attributes of the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA pointer to an <code>NSView</code> object.\nA pointer to an <code>NSWindow</code> object.\nA pointer to a <code>wl_surface</code>.\nA pointer to an <code>UIView</code> object.\nA pointer to an <code>UIViewController</code> object.\nA pointer to an <code>UIWindow</code> object.\nAn Xlib visual ID, or 0 if unknown.\nAn X11 <code>xcb_visualid_t</code>, or 0 if unknown.\nA pointer to an orbclient window.\nAn Xlib <code>Window</code>.\nAn X11 <code>xcb_window_t</code>.")